{"version":3,"file":"kachi.mjs","sources":["../index.ts"],"sourcesContent":["import { Block, Pack, Dict } from \"dalkak\";\r\n\r\nexport default new Pack(\r\n    new Dict,\r\n    \"kachi\",\r\n    {\r\n        link: new Block(\r\n            new Dict,\r\n            \"link\",\r\n            \"변수(val)을(url)에 연결해 서버 만들기\",\r\n            (param, info) => {\r\n                var Entry = (info as {data}).data.Entry;\r\n                if(!Entry.variableContainer.getVariableByName(param.val)){\r\n                    Entry.variableContainer.appendVariables([{name: param.val}]);\r\n                }\r\n                Entry.variableContainer.getVariableByName(param.val).setValue(new WebSocket(param.url));\r\n            }\r\n        ),\r\n        send: new Block(\r\n            new Dict,\r\n            \"send\",\r\n            \"서버(server)에(data)보내기\",\r\n            (param, info) => {\r\n                var Entry = (info as {data}).data.Entry;\r\n                Entry.variableContainer.getVariableByName(param.server).send(param.data);\r\n            }\r\n        ),\r\n        ready: new Block(\r\n            new Dict,\r\n            \"ready\",\r\n            \"서버(server)과 신호(msg), 변수(val) 연결하기\",\r\n            (param, info) => {\r\n                var Entry = (info as {data}).data.Entry;\r\n                if(!Entry.variableContainer.messages_.find(x=>x.name == param.msg)){\r\n                    Entry.variableContainer.appendMessages([{name: param.msg}]);\r\n                }\r\n                if(!Entry.variableContainer.getVariableByName(param.val)){\r\n                    Entry.variableContainer.appendVariables([{name: param.val}]);\r\n                }\r\n                var entMsg = Entry.variableContainer.messages_.find(x=>x.name == param.msg);\r\n                Entry.variableContainer.getVariableByName(param.server).onmessage(event => {\r\n                    Entry.variableContainer.getVariableByName(param.val).setValue(event.data);\r\n                    Entry.engine.raiseMessage(entMsg.id);\r\n                });\r\n            }\r\n        )\r\n    }\r\n);"],"names":["Pack","Dict","link","Block","param","info","Entry","data","variableContainer","getVariableByName","val","appendVariables","name","setValue","WebSocket","url","send","server","ready","messages_","find","x","msg","appendMessages","entMsg","onmessage","event","engine","raiseMessage","id"],"mappings":"mDAEA,UAAmBA,EACf,IAAIC,EACJ,QACA,CACIC,KAAM,IAAIC,EACN,IAAIF,EACJ,OACA,4BACA,SAACG,EAAOC,GACJ,IAAIC,EAASD,EAAgBE,KAAKD,MAC9BA,EAAME,kBAAkBC,kBAAkBL,EAAMM,MAChDJ,EAAME,kBAAkBG,gBAAgB,CAAC,CAACC,KAAMR,EAAMM,OAE1DJ,EAAME,kBAAkBC,kBAAkBL,EAAMM,KAAKG,SAAS,IAAIC,UAAUV,EAAMW,QAG1FC,KAAM,IAAIb,EACN,IAAIF,EACJ,OACA,uBACA,SAACG,EAAOC,GACSA,EAAgBE,KAAKD,MAC5BE,kBAAkBC,kBAAkBL,EAAMa,QAAQD,KAAKZ,EAAMG,QAG3EW,MAAO,IAAIf,EACP,IAAIF,EACJ,QACA,oCACA,SAACG,EAAOC,GACJ,IAAIC,EAASD,EAAgBE,KAAKD,MAC9BA,EAAME,kBAAkBW,UAAUC,KAAK,SAAAC,UAAGA,EAAET,MAAQR,EAAMkB,OAC1DhB,EAAME,kBAAkBe,eAAe,CAAC,CAACX,KAAMR,EAAMkB,OAErDhB,EAAME,kBAAkBC,kBAAkBL,EAAMM,MAChDJ,EAAME,kBAAkBG,gBAAgB,CAAC,CAACC,KAAMR,EAAMM,OAE1D,IAAIc,EAASlB,EAAME,kBAAkBW,UAAUC,KAAK,SAAAC,UAAGA,EAAET,MAAQR,EAAMkB,MACvEhB,EAAME,kBAAkBC,kBAAkBL,EAAMa,QAAQQ,UAAU,SAAAC,GAC9DpB,EAAME,kBAAkBC,kBAAkBL,EAAMM,KAAKG,SAASa,EAAMnB,MACpED,EAAMqB,OAAOC,aAAaJ,EAAOK"}